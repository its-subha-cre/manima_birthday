import streamlit as st
import time
import folium
from streamlit_folium import st_folium
from datetime import datetime
import random
st.set_page_config(page_title="Happy Birthday manima!", page_icon="ЁЯОЙ", layout="centered")
import base64
BIRTHDAY_DATE = datetime(2026, 8, 27, 0, 0, 0)
MOM_NAME = "Manima тЭдя╕П"
BIRTHDAY_TEXT = "ЁЯОЙ рж╢рзБржн ржЬржирзНржоржжрж┐ржи ржорж╛ржирж┐ржорж╛! ЁЯОВ"
def encode_video(video_path):
    with open(video_path, "rb") as f:
        video_bytes = f.read()
    return base64.b64encode(video_bytes).decode()

video_base64 = encode_video("PixVerse_V4.5_Image_Text_360P_i_want_the_video.mp4")  # You need to define this function

# video_base64 = encode_video("intro.mp4")  # Your encoded video string

st.markdown(f"""
    <style>
    #loader {{
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: white;
        z-index: 9999;
        animation: fadeOut 1s ease-in-out 4s forwards;

        /* Flexbox centering */
        display: flex;
        align-items: center;
        justify-content: center;
    }}

    .intro-video {{
        width: 300px;
        height: auto;
    }}

    @keyframes fadeOut {{
        to {{
            opacity: 0;
            visibility: hidden;
        }}
    }}
    </style>

    <div id="loader">
        <video class="intro-video" autoplay muted>
            <source src="data:video/mp4;base64,{video_base64}" type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>
""", unsafe_allow_html=True)



def set_background(image_file):
    with open(image_file, "rb") as img_file:
        encoded = base64.b64encode(img_file.read()).decode()
    css = f"""
    <style>
    .stApp {{
        background-image: url("data:image/jpeg;base64,{encoded}");
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
        background-attachment: fixed;
        background-color: white;
    }}
    </style>
    """
    st.markdown(css, unsafe_allow_html=True)

set_background("IMG-20250826-WA0078.jpg")

# message = """
# ЁЯТЦ ржкрзГржерж┐ржмрзАрж░ рж╕ржмржЪрзЗржпрж╝рзЗ ржнрж╛рж▓рзЛ ржорж╛,  
# рждрзЛржорж╛рж░ ржЕржлрзБрж░ржирзНржд ржнрж╛рж▓рзЛржмрж╛рж╕рж╛, рж╕рж╣рж╛ржпрж╝рждрж╛ ржУ ржпрждрзНржирзЗрж░ ржЬржирзНржп ржЕрж╕рзАржо ржХрзГрждржЬрзНржЮрждрж╛ред  
# рждрзБржорж┐ ржЖржорж╛рж░ ржкржержкрзНрж░ржжрж░рзНрж╢ржХ ржЖрж▓рзЛ ржПржмржВ рж╕ржмржЪрзЗржпрж╝рзЗ ржмржбрж╝ ржЕржирзБржкрзНрж░рзЗрж░ржгрж╛ред  
# рждрзЛржорж╛рж░ ржкрзНрж░рждрж┐ ржЖржорж╛рж░ ржЧржнрзАрж░ рж╢рзНрж░ржжрзНржзрж╛ рж░ржпрж╝рзЗржЫрзЗред  
# рждрзЛржорж╛рж░ ржЬрзАржмржи рж╣рж╛рж╕рж┐, ржЖржиржирзНржж ржУ ржЖрж╢рзАрж░рзНржмрж╛ржжрзЗ ржнрж░рзЗ ржЙржарзБржХ ржЖржЬ ржПржмржВ ржкрзНрж░рждрж┐ржжрж┐ржиред  

# **ржЖржорж┐ рждрзЛржорж╛ржХрзЗ ржЪрж┐рж░ржжрж┐ржи ржнрж╛рж▓рзЛржмрж╛рж╕ржм! тЭдя╕П**
# """
# placeholder = st.empty()
# typed = ""
# for char in message:
#     typed += char
#     colored_text = f"<span style='color:#FF69B4; font-size:20px; font-weight:600;'>{typed}</span>"
#     placeholder.markdown(colored_text, unsafe_allow_html=True)
#     time.sleep(0.03)
# -------------------- Balloons CSS --------------------
st.markdown("""
<style>
@keyframes float {
    0% { transform: translateY(100vh) scale(1); opacity: 1; }
    100% { transform: translateY(-10vh) scale(1.2); opacity: 0; }
}
.balloon {
    position: fixed;
    bottom: -150px;
    width: 40px;
    height: 60px;
    background: red;
    border-radius: 50%;
    animation: float 6s linear infinite;
    z-index: 999;
}
.balloon:before {
    content: '';
    position: absolute;
    top: 60px;
    left: 18px;
    width: 4px;
    height: 40px;
    background: black;
}
</style>
<div class="balloon" style="left: 10%; animation-delay: 0s;"></div>
<div class="balloon" style="left: 30%; background: blue; animation-delay: 2s;"></div>
<div class="balloon" style="left: 50%; background: green; animation-delay: 4s;"></div>
<div class="balloon" style="left: 70%; background: purple; animation-delay: 1s;"></div>
<div class="balloon" style="left: 90%; background: orange; animation-delay: 3s;"></div>
""", unsafe_allow_html=True)

# -------------------- Typewriter --------------------
def rainbow_text(text):
    colors = ["#FF69B4", "#FF4500", "#FFD700", "#ADFF2F", "#00CED1", "#1E90FF", "#BA55D3"]
    result = ""
    for letter in text:
        if letter != " ":
            result += f"<span style='color:{random.choice(colors)}; font-size: 48px; font-weight: bold;'>{letter}</span>"
        else:
            result += " "
    return f"<div style='text-align: center;'>{result}</div>"

st.markdown(rainbow_text(BIRTHDAY_TEXT), unsafe_allow_html=True)
st.balloons()

# =========================
# ЁЯУЕ COUNTDOWN
# =========================
now = datetime.now()
if now < BIRTHDAY_DATE:
    diff = BIRTHDAY_DATE - now
    countdown_text = f"тП│ ржкрж░рзЗрж░ ржЬржирзНржоржжрж┐ржи ржЖрж╕рждрзЗ ржХрждржжрж┐ржи ржмрж╛ржХрж┐ : {diff.days} days, {diff.seconds//3600} hours, {(diff.seconds//60)%60} minutes, {diff.seconds%60} seconds left!"
    st.markdown(f"<h3 style='color:#00FFFF;'>{countdown_text}</h3>", unsafe_allow_html=True)
else:
    st.markdown("<h3 style='color:#FF69B4;'>ЁЯОВ Today is the Big Day! Happy Birthday, Manima! ЁЯТР</h3>", unsafe_allow_html=True)
# -------------------- Slideshow --------------------


import streamlit as st
import time
import folium
from streamlit_folium import st_folium
from streamlit_autorefresh import st_autorefresh


# st.set_page_config(layout="centered")

st.markdown("""
<div style='
    text-align: center;
    color: #FF1493;
    font-size: 28px;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: -10px;
    padding-top: 10px;
'>
    ЁЯУ╕ рждрзЛржорж╛рж░ ржХрж┐ржЫрзБ рж╣рж╛рж░рж┐ржпрж╝рзЗ ржпрж╛ржУржпрж╝рж╛ ржЫржмрж┐
</div>
""", unsafe_allow_html=True)

# Slides data
count = st_autorefresh(interval=3000, limit=None, key="slideshow")

# Slides data
slides = [
    {"img": "manima_poribarer_sathe.jpg", "caption": "ржорж╛ржирж┐ржорж╛ ржкрж░рж┐ржмрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ"},
    {"img": "manima.jpg", "caption": "ржорж╛ржирж┐ржорж╛"},
    {"img": "manima_tar_barite.jpg", "caption": "ржорж╛ржирж┐ржорж╛ рждрж╛рж░ ржмрж╛ржбрж╝рж┐рждрзЗ"},
    {"img": "manima_borodidir_sathe.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ ржмржбрж╝ржжрж┐ржжрж┐рж░ рж╕рж╛ржерзЗ"},
    {"img": "manima_mahisadal_rajbariir_samne.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ ржорж╣рж┐рж╖рж╛ржжрж▓ рж░рж╛ржЬржмрж╛ржбрж╝рж┐рж░ рж╕рж╛ржоржирзЗ"},
    {"img": "manima_amr_sathe.jpg", "caption": "ржорж╛ржирж┐ржорж╛ ржЖржорж╛рж░ рж╕рж╛ржерзЗ"},
    {"img": "manima_meshomonir_Sathe.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ ржорзЗрж╢рзЛржоржгрж┐рж░ рж╕рж╛ржерзЗ"},
    {"img": "manima_tar_mejoboner_sathe.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ ржорзЗржЬрзЛржмрзЛржирзЗрж░ рж╕рж╛ржерзЗ"},
    {"img": "manima_mahisadal_rajbariir_samne.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ ржорж╣рж┐рж╖рж╛ржжрж▓ рж░рж╛ржЬржмрж╛ржбрж╝рж┐рж░ рж╕рж╛ржоржирзЗ"},
    {"img": "purono_manima.jpeg", "caption": "ржкрзБрж░рзЛржирзЛ ржорж╛ржирж┐ржорж╛"},
    {"img": "manima_tar_mayer_sathe.jpeg", "caption": "ржорж╛ржирж┐ржорж╛ рждрж╛рж░ ржорж╛ржпрж╝рзЗрж░ рж╕рж╛ржерзЗ"},
]


index = count % len(slides)
current = slides[index]

st.image(current["img"], use_container_width=True)
st.markdown(
    f"<p style='text-align:center; font-size:18px; color:darkblue;'>{current['caption']}</p>",
    unsafe_allow_html=True
)

# -------------------- Map --------------------
# -------------------- Map --------------------
st.markdown("""
<div style='
    text-align: center;
    color: #FF1493;
    font-size: 28px;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: -10px;
    padding-top: 10px;
'>
    ЁЯУ╕ рждрзЛржорж╛рж░ ржЬржирзНржорж╕рзНржерж╛ржи
</div>
""", unsafe_allow_html=True)
birthplace = [22.3810, 87.9025]  # ржорж╛ржирж┐ржорж╛рж░ ржЬржирзНржорж╕рзНржерж╛ржи (рж╕ржарж┐ржХ co-ordinate ржжрж╛ржУ)

m = folium.Map(
    location=birthplace,
    zoom_start=12,
    control_scale=True,
    prefer_canvas=True
)

# Marker with popup + tooltip
folium.Marker(
    location=birthplace,
    popup="ЁЯОВ ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ ржЬржирзНржорж╕рзНржерж╛ржи!",
    tooltip="ЁЯОИ ржорж╛ржирж┐ржорж╛рж░ ржЬржирзНржорж╕рзНржерж╛ржи"
).add_to(m)

# Render map in responsive way for mobile
st_data = st_folium(
    m,
    width="100%",   # full responsive width
    height=300,     # ржЫрзЛржЯ height for mobile
    returned_objects=[]
)


# -------------------- Surprise Letter --------------------

import os

st.markdown("""
<div style='
    text-align: center;
    color: #FF1493;
    font-size: 28px;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: -10px;
    padding-top: 10px;
'>
    ## ЁЯУЪ рждрзЛржорж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржЧрж▓рзНржкрзЗрж░ ржХрж╛рж▓рзЗржХрж╢ржи
</div>
""", unsafe_allow_html=True)

# Folder containing the PDF stories
pdf_files = [
    "рж░рж╛рждржЯрж╛ ржХрж┐ржирзНрждрзБ ржЕржиржирзНржпрж╛рж░ ржШрзБржо рж╣рж▓ ржирж╛ред ржШрзБржорж┐ржпрж╝рзЗржЫрж┐рж▓ ржмржЯрзЗ.pdf",
    "рж░рзЗржмрждрзА рж╕ржирзНржирзНржпрж╛рж╕рзАрж░ рж╕рзНрждрзНрж░рзАред рж╕ржирзНржирзНржпрж╛рж╕рзАрж░ ржЕржмрж╢рзНржп рж╕рзНрждрзНрж░рзА ржерж╛ржХрж╛ рж╕ржорзНржнржм ржиржпрж╝.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЙрж░рзНржжрзБржЧрж▓рзНржк рзирзЯ ржЦржгрзНржб.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк  редред  ржорж╛ржирж┐ржХ ржмржирзНржжрзНржпрзЛржкрж╛ржзрзНржпрж╛ржпрж╝.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк редред рж╕рждрзАржирж╛рже ржнрж╛ржжрзБрж░рзА.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк редред рж╣рж╛рж╕рж╛ржи ржЖржЬрж┐ржЬрзБрж▓ рж╣ржХ.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржмрзНржпржЩрзНржЧ ржЧрж▓рзНржк редред ржкрж░рж┐ржорж▓ ржЧрзЛрж╕рзНржмрж╛ржорзА.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк ржЬрзНржпрж╛ржХ рж▓ржирзНржбржи редред  ржЬрзНржпрж╛ржХ рж▓ржирзНржбржи.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк рззржо ржкрж░рзНржм  редред  рж╕рзБржЪрж┐рждрзНрж░рж╛ ржнржЯрзНржЯрж╛ржЪрж╛рж░рзНржп.pdf",
    "рж╢рзНрж░рзЗрж╖рзНржа ржЧрж▓рзНржк  редред ржЬрзЯрж╛ ржорж┐рждрзНрж░.pdf",
]

for file in pdf_files:
    # Strip .pdf to make button label clean
    label = os.path.splitext(file)[0]
    with open(file, "rb") as f:
        st.download_button(
            label=f"ЁЯУЦ Read: {label}",
            data=f.read(),
            file_name=file,
            mime="application/pdf"
        )
st.markdown("""
<div style='
    text-align: center;
    color: #FF1493;
    font-size: 28px;
    font-weight: bold;
    margin-top: 10px;
    margin-bottom: -10px;
    padding-top: 10px;
'>
    ### ЁЯО╝ рждрзЛржорж╛рж░ ржЬржирзНржп ржПржХржЯрж╛ ржЧрж╛ржи"
</div>
""", unsafe_allow_html=True) 
audio_file = open("рж╢рзБржн ржЬржирзНржоржжрж┐ржи ржорж╛ржирж┐ржорж╛.mp3", "rb")
audio_bytes = audio_file.read()
st.audio(audio_bytes, format="audio/mp3", start_time=0)     
import time

st.markdown("""
        <div style="
            background-color: #fff8dc;  
            border: 2px solid #f1c40f;  
            border-radius: 12px;  
            padding: 20px;  
            box-shadow: 0px 8px 20px rgba(0,0,0,0.2);
            max-width: 600px;
            margin: 30px auto;
            font-family: 'Georgia', serif;
            font-size: 20px;
            color: #333;
            line-height: 1.6;
            animation: fadeIn 1s ease-in-out;
        ">
            тЬи ржкрзНрж░рж┐ржпрж╝ ржорж╛ржирж┐ржорж╛,<br><br>
ржПржЗ ржмрж┐рж╢рзЗрж╖ ржжрж┐ржирзЗ рждрзЛржорж╛ржХрзЗ ржЬрж╛ржирж╛ржЗ рж╣рзГржжржпрж╝ржнрж░рж╛ рж╢рзБржнрзЗржЪрзНржЫрж╛ ржУ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ред<br><br>
ржкрзНрж░рждрж┐ржЯрж╛ ржорзБрж╣рзВрж░рзНржд рждрзЛржорж╛рж░ ржорзБржЦрзЗрж░ рж╣рж╛рж╕рж┐рждрзЗ ржнрж░рзЗ ржЙржарзБржХ, ржЖрж░ ржЖржЧрж╛ржорзА ржжрж┐ржиржЧрзБрж▓рзЛ рж╣рзЛржХ ржЖрж╢рзАрж░рзНржмрж╛ржжржоржпрж╝ ржУ рж╢рж╛ржирзНрждрж┐ржоржпрж╝ред<br><br>
тЭдя╕П ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржУ рж╢рзНрж░ржжрзНржзрж╛ рж╕рж╣,<br>
рждрзЛржорж╛рж░ ржорж╛ржирж┐ ЁЯТЦ
    """, unsafe_allow_html=True)
st.markdown("""
<div style='
    text-align: center; 
    font-size: 18px; 
    color: #ff1493; 
    background-color: #fff0f5; 
    padding: 8px 12px; 
    border-radius: 8px; 
    font-weight: bold;
'>
    Made with тЭдя╕П love by <span style='color:#ff4500;'>Mani тЭдя╕П</span>
</div>
""", unsafe_allow_html=True)
